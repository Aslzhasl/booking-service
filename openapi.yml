openapi: "3.0.0"
info:
  title: Booking Service API
  version: "1.0.0"
  description: |
    Swagger/OpenAPI спецификация для Booking Service. 
    Содержит эндпоинты для получения доступности слотов и создания брони.

servers:
  - url: http://localhost:8082
    description: Локальный сервер

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    Booking:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: Уникальный идентификатор брони
          example: "ab12cd34-56ef-78gh-90ij-klmnopqrstuv"
        listing_id:
          type: string
          description: Идентификатор объявления (TEXT)
          example: "1748683358922123100"
        user_id:
          type: string
          format: uuid
          description: Идентификатор пользователя, создающего бронь
          example: "d1fc043e-b54a-4afd-a0c7-a6015e017b66"
        owner_id:
          type: string
          format: uuid
          description: Идентификатор владельца объявления
          example: "d08b137c-9edd-456a-9924-5ac8ce6fb203"
        start_time:
          type: string
          format: date-time
          description: Время начала брони (RFC3339, UTC)
          example: "2025-02-22T13:00:00Z"
        end_time:
          type: string
          format: date-time
          description: Время окончания брони (RFC3339, UTC)
          example: "2025-02-22T14:00:00Z"
        status:
          type: string
          description: Статус брони (PENDING, CONFIRMED, CANCELLED и т.д.)
          example: "PENDING"
        created_at:
          type: string
          format: date-time
          description: Время создания записи (заполняется базой, UTC)
          example: "2025-02-01T12:34:56Z"
        updated_at:
          type: string
          format: date-time
          description: Время последнего обновления записи (UTC)
          example: "2025-02-01T12:34:56Z"

    CreateBookingRequest:
      type: object
      required:
        - listing_id
        - user_id
        - owner_id
        - start_time
        - end_time
      properties:
        listing_id:
          type: string
          description: Идентификатор объявления (TEXT)
          example: "1748683358922123100"
        user_id:
          type: string
          format: uuid
          description: Идентификатор пользователя, создающего бронь
          example: "d1fc043e-b54a-4afd-a0c7-a6015e017b66"
        owner_id:
          type: string
          format: uuid
          description: Идентификатор владельца объявления
          example: "d08b137c-9edd-456a-9924-5ac8ce6fb203"
        start_time:
          type: string
          format: date-time
          description: Время начала брони (RFC3339, UTC)
          example: "2025-02-22T13:00:00Z"
        end_time:
          type: string
          format: date-time
          description: Время окончания брони (RFC3339, UTC)
          example: "2025-02-22T14:00:00Z"

    AvailabilityResponse:
      type: object
      properties:
        date:
          type: string
          format: date
          description: Дата в формате YYYY-MM-DD
          example: "2025-02-22"
        hours:
          type: object
          description: Карта доступности по часам (09:00–21:00)
          additionalProperties:
            type: boolean
            description: true = свободен, false = занят
          example:
            "09:00": true
            "10:00": true
            "11:00": false
            "12:00": false
            "13:00": true
            "14:00": true
            "15:00": true
            "16:00": true
            "17:00": true
            "18:00": true
            "19:00": true
            "20:00": true
            "21:00": true

  parameters:
    ListingIdPath:
      name: listingID
      in: path
      required: true
      description: Идентификатор объявления
      schema:
        type: string
    BookingIdPath:
      name: bookingID
      in: path
      required: true
      description: Идентификатор брони (UUID)
      schema:
        type: string
        format: uuid
    UserIdPath:
      name: userID
      in: path
      required: true
      description: Идентификатор пользователя (UUID)
      schema:
        type: string
        format: uuid
    DateQuery:
      name: date
      in: query
      required: true
      description: Дата для проверки доступности (формат YYYY-MM-DD)
      schema:
        type: string
        format: date
        example: "2025-02-22"
    StartQuery:
      name: start
      in: query
      required: true
      description: Начало интервала (RFC3339, UTC)
      schema:
        type: string
        format: date-time
        example: "2025-02-22T00:00:00Z"
    EndQuery:
      name: end
      in: query
      required: true
      description: Конец интервала (RFC3339, UTC)
      schema:
        type: string
        format: date-time
        example: "2025-02-23T00:00:00Z"
    AtQuery:
      name: at
      in: query
      required: true
      description: Конкретный момент времени для проверки (RFC3339, UTC)
      schema:
        type: string
        format: date-time
        example: "2025-02-22T13:00:00Z"

paths:
  /bookings:
    post:
      summary: Создание новой брони
      description: |
        Создаёт новую запись брони, если промежуток [start_time, end_time) свободен.
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateBookingRequest"
      responses:
        "201":
          description: Бронь успешно создана
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Booking"
        "400":
          description: Неверный запрос (некорректные данные или пересечение интервала)
          content:
            text/plain:
              schema:
                type: string
                example: "listing is already booked for the given time range"
        "401":
          description: Unauthorized — отсутствует или неверен JWT
          content:
            text/plain:
              schema:
                type: string
                example: "Unauthorized"

  /bookings/{bookingID}:
    get:
      summary: Получение брони по ID
      description: Возвращает все данные брони по её идентификатору.
      parameters:
        - $ref: "#/components/parameters/BookingIdPath"
      security:
        - BearerAuth: []
      responses:
        "200":
          description: Информация о брони
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Booking"
        "404":
          description: Бронь не найдена
          content:
            text/plain:
              schema:
                type: string
                example: "Booking not found"

  /bookings/user/{userID}:
    get:
      summary: Получение списка броней по userID
      description: Возвращает массив всех броней, сделанных указанным пользователем.
      parameters:
        - $ref: "#/components/parameters/UserIdPath"
      security:
        - BearerAuth: []
      responses:
        "200":
          description: Список броней для пользователя
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Booking"
        "404":
          description: Броней не найдено (может вернуть пустой массив)
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Booking"

  /bookings/available:
    get:
      summary: Проверка доступности объявления на интервал
      description: |
        Проверяет, свободен ли listing_id на всём интервале [start, end).
        Если хоть одно бронирование пересекается с этим диапазоном, возвращает available: false.
      parameters:
        - $ref: "#/components/parameters/StartQuery"
        - $ref: "#/components/parameters/EndQuery"
        - name: listing_id
          in: query
          required: true
          description: Идентификатор объявления
          schema:
            type: string
      security:
        - BearerAuth: []
      responses:
        "200":
          description: Информация о доступности
          content:
            application/json:
              schema:
                type: object
                properties:
                  available:
                    type: boolean
                    example: true
        "400":
          description: Неверный запрос (несовпадение параметров)
          content:
            text/plain:
              schema:
                type: string
                example: "Invalid query parameters"
        "401":
          description: Unauthorized — отсутствует или неверен JWT
          content:
            text/plain:
              schema:
                type: string
                example: "Unauthorized"

  /bookings/available/{listingID}:
    get:
      summary: Проверка доступности объявления в конкретный момент
      description: |
        Проверяет, свободен ли listingID в момент времени `at`.
        Если существует запись, охватывающая `at`, возвращает available: false.
      parameters:
        - $ref: "#/components/parameters/ListingIdPath"
        - $ref: "#/components/parameters/AtQuery"
      security:
        - BearerAuth: []
      responses:
        "200":
          description: Информация о доступности в момент времени
          content:
            application/json:
              schema:
                type: object
                properties:
                  available:
                    type: boolean
                    example: true
        "400":
          description: Неверный запрос (несоответствие параметров)
          content:
            text/plain:
              schema:
                type: string
                example: "Invalid query parameters"
        "401":
          description: Unauthorized — отсутствует или неверен JWT
          content:
            text/plain:
              schema:
                type: string
                example: "Unauthorized"

  /bookings/availability/{listingID}:
    get:
      summary: Ежедневная доступность по часам
      description: |
        Возвращает карту доступности по часам (09:00–21:00) для указанной даты.
        Ключ - час в формате "HH:00", значение - true (свободно) или false (занято).
      parameters:
        - $ref: "#/components/parameters/ListingIdPath"
        - $ref: "#/components/parameters/DateQuery"
      security:
        - BearerAuth: []
      responses:
        "200":
          description: Карта доступности на указанный день
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AvailabilityResponse"
        "400":
          description: Неверный запрос (например, отсутствует параметр date или неверный формат)
          content:
            text/plain:
              schema:
                type: string
                example: "Invalid date format (expected YYYY-MM-DD)"
        "401":
          description: Unauthorized — отсутствует или неверен JWT
          content:
            text/plain:
              schema:
                type: string
                example: "Unauthorized"
        "500":
          description: Внутренняя ошибка сервера
          content:
            text/plain:
              schema:
                type: string
                example: "Error getting availability: ..."
